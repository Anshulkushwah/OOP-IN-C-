
#include <iostream>

using namespace std;

//Base class 
class Employee
{
public:
  int id;

  float salary;

    Employee (int inpId)
  {
    id = inpId;
    salary = 34.0;

  }
  Employee (){}
  
};
// Derived class syntax
/*class {{derived-class-name}} : {{visibility - mode}} {{ base-class-name}}
{
    class members/methods/etc...
}

NOTE:
1. Default visiblity mode is private 
2. Public visiblity Mode : Public member of the base class become
Public member of the derived class
3.private visiblity Mode : Public member of the base class become
private member of the derived class
r. private member are never inherited

*/

// Creating a programmer class derived from Employed Base class 

class programmer:Employee
{
public:
  programmer (int inpId)
  {
    id = inpId;
  }
  int languageCode = 9;
  void getData (){
      cout<<id<<endl;
  }
};

int
main ()
{
  Employee harry (1), rohan (2);
  cout << harry.salary << endl;
  cout << rohan.salary << endl;
  programmer skillF(10);
  cout<<skillF.languageCode<<endl;
  skillF.getData();
  return 0;
}
